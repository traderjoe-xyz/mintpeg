/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MintpegFactory,
  MintpegFactoryInterface,
} from "../../contracts/MintpegFactory";

const _abi = [
  {
    inputs: [],
    name: "MintpegFactory__InvalidMintpegImplementation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "mintpeg",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "projectOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "royaltyReceiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "royaltyFee",
        type: "uint96",
      },
    ],
    name: "MintpegCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "mintpegImplementation",
        type: "address",
      },
    ],
    name: "SetMintpegImplementation",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allMintpegs",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_royaltyReceiver",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_feePercent",
        type: "uint96",
      },
    ],
    name: "createMintpeg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "createdMintpegs",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_deployer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_createdMintpegIndex",
        type: "uint256",
      },
    ],
    name: "getMintpegCreatedAtIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_deployer",
        type: "address",
      },
    ],
    name: "getNumberOfMintpegsCreated",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalMintpegsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintpegImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mintpegImplementation",
        type: "address",
      },
    ],
    name: "setMintpegImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6111698061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b14610152578063a3ac269814610170578063c4cb86871461018e578063e1769ca9146101be578063f2fde38b146101da578063fcebe2f6146101f6576100a9565b806305032ef6146100ae57806364f204a8146100de578063715018a6146100fa57806378c017b3146101045780638b5c1c7b14610134575b600080fd5b6100c860048036038101906100c39190610b5b565b610226565b6040516100d59190610e76565b60405180910390f35b6100f860048036038101906100f39190610bc8565b610272565b005b610102610590565b005b61011e60048036038101906101199190610b88565b6105a4565b60405161012b9190610d63565b60405180910390f35b61013c61062a565b6040516101499190610e76565b60405180910390f35b61015a610637565b6040516101679190610d63565b60405180910390f35b610178610660565b6040516101859190610d63565b60405180910390f35b6101a860048036038101906101a39190610b88565b610686565b6040516101b59190610d63565b60405180910390f35b6101d860048036038101906101d39190610b5b565b6106d4565b005b6101f460048036038101906101ef9190610b5b565b6107ca565b005b610210600480360381019061020b9190610c67565b61084e565b60405161021d9190610d63565b60405180910390f35b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156102fb576040517ff9c55d4900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610328600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661088d565b90508073ffffffffffffffffffffffffffffffffffffffff1663b7e31add868686866040518563ffffffff1660e01b81526004016103699493929190610d7e565b600060405180830381600087803b15801561038357600080fd5b505af1158015610397573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b336040518263ffffffff1660e01b81526004016103d49190610d63565b600060405180830381600087803b1580156103ee57600080fd5b505af1158015610402573d6000803e3d6000fd5b505050506002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8b789ba6704470f44c1d65439f507002a0000359cf01f1b2c9391c059a02e77188888760405161058193929190610dd1565b60405180910390a45050505050565b610598610962565b6105a260006109e0565b565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106105f7576105f6610fca565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b6000600280549050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360205281600052604060002081815481106106a257600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106dc610962565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610743576040517ff9c55d4900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fb57500a193a7ac5e2c8f69a3a5409bb3cc80d7823d7206f4081639b966ea1b2c60405160405180910390a250565b6107d2610962565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610842576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083990610e16565b60405180910390fd5b61084b816109e0565b50565b6002818154811061085e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0915050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561095d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095490610e36565b60405180910390fd5b919050565b61096a610aa4565b73ffffffffffffffffffffffffffffffffffffffff16610988610637565b73ffffffffffffffffffffffffffffffffffffffff16146109de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d590610e56565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000610abf610aba84610eb6565b610e91565b905082815260208101848484011115610adb57610ada61102d565b5b610ae6848285610f57565b509392505050565b600081359050610afd816110ee565b92915050565b600082601f830112610b1857610b17611028565b5b8135610b28848260208601610aac565b91505092915050565b600081359050610b4081611105565b92915050565b600081359050610b558161111c565b92915050565b600060208284031215610b7157610b70611037565b5b6000610b7f84828501610aee565b91505092915050565b60008060408385031215610b9f57610b9e611037565b5b6000610bad85828601610aee565b9250506020610bbe85828601610b31565b9150509250929050565b60008060008060808587031215610be257610be1611037565b5b600085013567ffffffffffffffff811115610c0057610bff611032565b5b610c0c87828801610b03565b945050602085013567ffffffffffffffff811115610c2d57610c2c611032565b5b610c3987828801610b03565b9350506040610c4a87828801610aee565b9250506060610c5b87828801610b46565b91505092959194509250565b600060208284031215610c7d57610c7c611037565b5b6000610c8b84828501610b31565b91505092915050565b610c9d81610f03565b82525050565b6000610cae82610ee7565b610cb88185610ef2565b9350610cc8818560208601610f66565b610cd18161103c565b840191505092915050565b6000610ce9602683610ef2565b9150610cf48261104d565b604082019050919050565b6000610d0c601683610ef2565b9150610d178261109c565b602082019050919050565b6000610d2f602083610ef2565b9150610d3a826110c5565b602082019050919050565b610d4e81610f35565b82525050565b610d5d81610f3f565b82525050565b6000602082019050610d786000830184610c94565b92915050565b60006080820190508181036000830152610d988187610ca3565b90508181036020830152610dac8186610ca3565b9050610dbb6040830185610c94565b610dc86060830184610d54565b95945050505050565b60006060820190508181036000830152610deb8186610ca3565b90508181036020830152610dff8185610ca3565b9050610e0e6040830184610d54565b949350505050565b60006020820190508181036000830152610e2f81610cdc565b9050919050565b60006020820190508181036000830152610e4f81610cff565b9050919050565b60006020820190508181036000830152610e6f81610d22565b9050919050565b6000602082019050610e8b6000830184610d45565b92915050565b6000610e9b610eac565b9050610ea78282610f99565b919050565b6000604051905090565b600067ffffffffffffffff821115610ed157610ed0610ff9565b5b610eda8261103c565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610f0e82610f15565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006bffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610f84578082015181840152602081019050610f69565b83811115610f93576000848401525b50505050565b610fa28261103c565b810181811067ffffffffffffffff82111715610fc157610fc0610ff9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f455243313136373a20637265617465206661696c656400000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6110f781610f03565b811461110257600080fd5b50565b61110e81610f35565b811461111957600080fd5b50565b61112581610f3f565b811461113057600080fd5b5056fea264697066735822122094f7c325a6578228d54e81dfc5b3dd0507ddf450def2b14e59b9a6a4271ff7c264736f6c63430008070033";

type MintpegFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MintpegFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MintpegFactory__factory extends ContractFactory {
  constructor(...args: MintpegFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MintpegFactory> {
    return super.deploy(overrides || {}) as Promise<MintpegFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MintpegFactory {
    return super.attach(address) as MintpegFactory;
  }
  override connect(signer: Signer): MintpegFactory__factory {
    return super.connect(signer) as MintpegFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MintpegFactoryInterface {
    return new utils.Interface(_abi) as MintpegFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MintpegFactory {
    return new Contract(address, _abi, signerOrProvider) as MintpegFactory;
  }
}
